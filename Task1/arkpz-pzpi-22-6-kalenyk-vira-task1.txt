Харківський національний університет радіоелектроніки
Факультет комп’ютерних наук


Кафедра програмної інженерії



ЗВІТ
до лабораторної роботи № 1
з дисципліни «Аналіз та рефакторинг коду»








Харків 2024
1 РОЗРОБКА VISION AND SCOPE DOCUMENT
1.1 Мета роботи
    	Метою роботи є розробка Vision and Scope Document для визначення цілей, функціональності та обмежень системи з контролю свіжості продуктів у холодильнику, що дозволить оптимізувати процес розробки та тестування.
1.2	 Хід роботи
1.2.1	Описати проблеми потенційних користувачів та сформулювати ключові потреби.
1.2.2	Провести аналіз аналогів, визначити їх сильні та слабкі сторони, порівняти з нашою системою.
1.2.3	Визначити призначення системи, її користь для споживачів та роль у вирішенні проблеми.
1.2.4	Описати головну функціональність системи: бізнес-логіку, адміністрування та управління.
1.2.5	Визначити функціональність, яка буде реалізована у цьому семестрі для тестування.
1.2.6	Описати функціональність, яка забезпечить цілісність системи, але не буде реалізована цього семестру.
1.2.7	Вказати технології, програмні засоби, субд, фреймворки, мови програмування та сформулювати нефункціональні вимоги.
1.4 Висновки 
В ході виконання лабораторної роботи було розроблено документ Vision and Scope, який наведено в додатку А. У документі було описано проблеми потенційних користувачів, проведено аналіз аналогів, визначено призначення системи, головну функціональність, функції для реалізації у цьому семестрі та функції для забезпечення цілісності системи. Також було описано робоче середовище, включаючи технології, програмні засоби та нефункціональні вимоги.

 
ДОДАТОК А

Vision and Scope Document
for
Програмна система для контролю свіжості продуктів у холодильнику
Версія 1.0
Підготовлено студенткою групи ПЗПІ-22-6, Каленик В.О.
Харківський національний університет радіоелектроніки
17.11.2024 
Table of Contents

Table of Contents	4
Revision History	4
1.	Business Requirements	5
1.1.	Background	5
1.2.	Business Opportunity	5
2.	Vision of the Solution	7
2.1.	Vision Statement	7
2.2.	Major Features	8
3.	Scope and Limitations	9
3.1.	Scope of Initial Release	9
3.2.	Scope of Subsequent Releases	10
4.	Business Context	11
4.3.	Operating Environment	11


Revision History

Name	Date	Reason For Changes	Version
Каленик В. О.	17.11.2024		1.0
			
 
1	Business Requirements
1.1.	Background
Контроль свіжості продуктів є важливим аспектом для зменшення харчових відходів та покращення ефективності їх використання. У багатьох домогосподарствах щодня викидаються продукти через непомітне спливання терміну придатності. Неправильне зберігання продуктів може спричинити псування навіть до вказаного терміну, створюючи ризики для здоров’я.
Метою створення програмної системи для контролю свіжості продуктів у холодильнику є впровадження розумного рішення для:
•	Моніторингу умов зберігання продуктів;
•	Автоматичного відстеження термінів придатності;
•	Попередження користувачів про ризик псування.
Це сприятиме:
•	Зменшенню кількості харчових відходів;
•	Заощадженню коштів користувачів;
•	Захисту від ризиків отруєння;
•	Формуванню екологічної свідомості.
1.2. Business Opportunity
Зараз багато компаній розробляють технології, спрямовані на покращення умов зберігання продуктів у холодильниках, і на ринку вже представлені певні аналоги. Ці технології мають на меті зменшити втрати їжі та покращити зручність користувачів.  Наприклад, HyperFresh від Siemens використовує сенсори для моніторингу температури та вологості у спеціальних зонах холодильника, що дозволяє створювати оптимальні умови для зберігання продуктів. Аналогічно, технологія BioFresh, застосована в холодильниках Liebherr, забезпечує збереження продуктів у спеціальних відсіках з температурою близькою до 0°C. Такі рішення ефективно працюють для підтримання якості продуктів, однак вони обмежені інтеграцією лише в холодильники конкретних виробників. Інші інновації включають розробку окремих пристроїв, як-от NFC-датчики, що дозволяють відстежувати свіжість продуктів. Наприклад, у Туреччині було створено NFC-датчик для холодильників, який відстежує стан продуктів та попереджає про можливе псування. Ці пристрої пропонують гнучкість і можуть бути встановлені в різних холодильниках, проте їх функціонал залишається досить обмеженим.
Запропонована програмна система для контролю свіжості продуктів у холодильнику має низку суттєвих переваг перед існуючими рішеннями. По-перше, система є універсальною та може бути інтегрована в будь-який холодильник, незалежно від його моделі чи виробника. По-друге, її функціонал розширений завдяки використанню RFID-міток, які дозволяють автоматично відстежувати терміни придатності продуктів і сповіщати користувача про їхній стан. По-третє, система включає мобільний додаток, за допомогою якого користувачі можуть отримувати сповіщення про необхідність використання продуктів, переглядати історію зберігання та отримувати рекомендації щодо оптимального використання продуктів.
Ця система орієнтована на широке коло споживачів, включаючи домогосподарства, ресторани, готелі та заклади громадського харчування. Ринок таких рішень є перспективним через постійне зростання попиту на технології, які допомагають зменшити харчові відходи та заощадити ресурси.
Модель монетизації може включати продаж пристроїв та підписку на преміум-функції мобільного додатку, такі як розширена аналітика, персоналізовані рекомендації та інші послуги. Додатково, є можливість партнерства з виробниками холодильників, які можуть інтегрувати систему як додаткову функцію в нові моделі техніки.
2	Vision of the Solution
2.1.	Vision Statement
Програмна система для контролю свіжості продуктів у холодильнику — це багатокомпонентне рішення, яке забезпечує автоматизований моніторинг умов зберігання харчових продуктів та їх свіжості. Система створена для зменшення харчових відходів, оптимізації використання продуктів та забезпечення кращого контролю умов їх зберігання як для домогосподарств, так і для закладів громадського харчування.
Система працює за допомогою вбудованих сенсорів температури та вологості, які постійно відстежують умови зберігання продуктів у холодильнику. Завдяки цьому створюються оптимальні кліматичні умови, що запобігають псуванню продуктів. Окрім цього, RFID-мітки автоматично зчитують інформацію про терміни придатності продуктів і передають ці дані до центральної системи. На основі отриманих даних система аналізує поточний стан продуктів, прогнозує можливість їх псування та генерує рекомендації щодо їх оптимального використання.
Для зручності користувачів система включає мобільний додаток, який дозволяє переглядати список продуктів із детальною інформацією про їх стан, терміни придатності та прогнозовану дату їх використання. Користувачі також отримують автоматизовані сповіщення про наближення термінів придатності, що допомагає вчасно використовувати продукти та уникати їх псування. Серверна частина системи зберігає всю інформацію про продукти, створює аналітичні звіти та допомагає користувачам краще планувати закупівлі та управління запасами.
Призначення системи полягає в тому, щоб забезпечити користувачів усіма необхідними інструментами для моніторингу стану продуктів у реальному часі, їх раціонального використання та створення екологічно свідомих звичок зменшення харчових відходів. Вона націлена на широке коло споживачів — від індивідуальних користувачів до ресторанів та супермаркетів, які потребують ефективного управління запасами.
2.2.	Major Features
MF-1. Контроль умов зберігання
Система автоматично відстежує температуру та вологість у холодильнику за допомогою вбудованих сенсорів. Це дозволяє підтримувати оптимальні умови для зберігання різних типів продуктів, зменшуючи ризик їх псування.
MF-2. Відстеження термінів придатності
RFID-мітки, прикріплені до продуктів, дозволяють зчитувати та зберігати інформацію про їх термін придатності. Система обробляє ці дані та попереджає користувача про наближення закінчення терміну придатності.
MF-3. Автоматизовані сповіщення
Користувачі отримують сповіщення через мобільний додаток, коли термін придатності продукту наближається до завершення. Це допомагає уникати псування їжі та вчасно використовувати продукти.
MF-4. Інтерфейс для управління продуктами
Мобільний додаток надає користувачам зручний інтерфейс для перегляду списку продуктів із детальною інформацією про їх стан, терміни придатності та прогнозовану дату використання. Інтерфейс також дозволяє вводити нові продукти та змінювати їх статус.
MF-5. Аналітика та звітність
Серверна частина зберігає історичні дані про зберігання продуктів і формує аналітичні звіти для користувачів. Ці звіти дозволяють відстежувати ефективність використання продуктів та оптимізувати їх зберігання.
MF-6. Адміністрування системи
Веб-інтерфейс дозволяє налаштовувати роботу системи, додавати або видаляти сенсори, керувати користувацькими обліковими записами та слідкувати за загальним станом системи.
3	Scope and Limitations
3.1.	Scope of Initial Release
У рамках первинного випуску програмного продукту буде реалізовано серверну частину системи та IoT-клієнт, які забезпечать основну функціональність для збору, обробки та передачі даних про свіжість продуктів. Також буде реалізовано процес розгортання програмної системи для забезпечення її працездатності.
3.1.1. Серверна частина:
СЧ-1. Реалізація механізму прийому даних від IoT-сенсорів (температура, вологість, RFID-мітки);
СЧ-2. Обробка отриманих даних для визначення поточного стану продуктів;
СЧ-3. Збереження інформації про продукти в базі даних із вказанням термінів придатності, умов зберігання та ідентифікаторів;
СЧ-4. Формування базових аналітичних звітів про зберігання продуктів для подальшої інтеграції з мобільним додатком у наступних етапах.
3.1.2. IoT-клієнт:
ІК-1. Налаштування сенсорів температури, вологості та RFID-зчитувачів для інтеграції з системою;
ІК-2. Передача даних до серверної частини у реальному часі;
ІК-3. Забезпечення коректної роботи з кількома сенсорами одночасно для моніторингу різних зон холодильника.
3.2.3. Розгортання системи:
РС-1. Створення середовища для запуску серверної частини (локальний сервер або хмарна платформа);
РС-2. Тестування взаємодії IoT-клієнта із сервером для забезпечення стабільного збору та обробки даних.
Головною метою цього випуску є забезпечення збору даних із сенсорів та їх обробки на сервері, що стане основою для подальшого розширення функціональності. На даному етапі реалізація мобільного додатку та інших компонентів буде відкладена для наступних фаз розвитку продукту.
3.2.	Scope of Subsequent Releases
У рамках наступних етапів розробки програмного продукту буде реалізовано веб-інтерфейс і мобільний додаток, а також завершено інтеграцію з серверною частиною для забезпечення зручності використання системи кінцевими користувачами.
3.2.1. Веб-інтерфейс:
ВІ-1. Розробка веб-інтерфейсу для відображення списку продуктів із інформацією про терміни придатності, умови зберігання та стан продуктів;
ВІ-2. Реалізація можливості ручного введення даних про нові продукти через веб-форму;
ВІ-3. Відображення сповіщень про продукти, термін придатності яких добігає кінця.
3.2.2.	Мобільний додаток:
МД-1. Реалізація інтерфейсу мобільного додатка для перегляду стану продуктів у холодильнику;
МД-2. Налаштування функції надсилання сповіщень користувачам про необхідність використання продуктів із наближенням терміну придатності або про закінчення терміну придатності продукту;
МД-3. Забезпечення синхронізації даних між мобільним додатком і серверною частиною.
3.2.3.	Інтеграція веб-інтерфейсу та мобільного додатка із сервером:
ІВС-1. Використання API серверної частини для отримання та надсилання даних із веб-інтерфейсу;
ІВС-2. Тестування повного циклу передачі даних між сервером, базою даних і користувацькими інтерфейсами (веб та мобільний додаток);
ІВС-3. Забезпечення відображення даних із бази даних у реальному часі через веб-інтерфейс та мобільний додаток.
Ці етапи спрямовані на забезпечення завершеної функціональності системи, яка включає повний доступ до інформації про продукти через веб-інтерфейс та мобільний додаток, а також їх повну інтеграцію з сервером.
4	Business Context

4.3.	Operating Environment
Для реалізації програмного продукту буде використано сучасні технології, які забезпечать ефективність роботи системи. Основою серверної частини стане платформа Node.js, яка забезпечить обробку HTTP-запитів і взаємодію з базою даних MySQL, щоб структурувати дані та забезпечувати їхню доступність.
Розробка API для взаємодії з системою буде виконана вручну, без використання сторонніх бібліотек, на основі стандартного модуля http. Усі SQL-запити будуть написані вручну для взаємодії з базою даних. Імітація роботи сенсорів, таких як датчики температури, вологості та RFID-мітки, буде реалізована за допомогою власних серверних скриптів, які генерують випадкові дані.
Розробка веб-інтерфейсу буде виконана за допомогою Angular, використовуючи лише базовий функціонал фреймворку. Angular забезпечить модульність додатка та зручний спосіб управління даними продуктів через API серверної частини.
Розробка програмного забезпечення виконуватиметься в середовищі Visual Studio Code, а тестування API – за допомогою інструменту Postman. Для управління базою даних і виконання SQL-запитів буде використовуватися DBeaver, що забезпечить простоту роботи з базою та контроль над її структурою.
Щодо нефункціональних вимог:
НВ-1. Доступність
Система повинна забезпечувати доступність через локальний сервер із підтримкою HTTP-запитів. У майбутньому можлива інтеграція з хмарними сервісами для забезпечення віддаленого доступу. Доступ до API повинен бути безперебійним у межах локальної мережі.
НВ-2. Надійність 
Система має стабільно обробляти запити навіть при генерації великої кількості імітованих даних. У разі збою сервер повинен відновлювати роботу автоматично без втрати даних. Усі дані, що надходять до бази, мають проходити валідацію, щоб уникнути внесення некоректної інформації.
НВ-3. Продуктивність
Система повинна забезпечувати обробку до 50 одночасних запитів із середнім часом відповіді не більше 500 мс. Імітація даних сенсорів повинна працювати в реальному часі без затримок. База даних має бути оптимізована для швидкого виконання запитів навіть за збільшення обсягу даних.
НВ-4. Цілісність
База даних повинна гарантувати унікальність кожного запису про продукт, включаючи терміни придатності та умови зберігання. Дані про імітовані сенсори повинні відповідати реалістичним сценаріям використання. Канали передачі даних між компонентами системи повинні бути захищені, щоб уникнути втрати чи пошкодження інформації.
НВ-5. Масштабованість
Система повинна бути готовою до розширення у майбутньому, включаючи інтеграцію реальних сенсорів і додавання нових функцій без значних змін у базовій архітектурі.
НВ-6. Юзабіліті
Інтерфейси системи, зокрема API, повинні бути інтуїтивно зрозумілими для розробників. Уся документація (інструкції з використання, опис API) має бути доступною та зрозумілою.

Список використаних джерел: 
1.	Siemens. HyperFresh Technology. URL: https://www.siemens-home.bsh-group.com/ua/ru/inspiration/innovation/isensoric/oxlazdenie (дата звернення: 15.11.2024);
2.	Liebherr. BioFresh Technology. URL: https://www.liebherr.com (дата звернення: 15.11.2024);
3.	Angular Framework Documentation. URL: https://angular.io/ (дата звернення: 17.11.2024);
4.	Node.js Official Website. URL: https://nodejs.org/ (дата звернення: 17.11.2024);
5.	DBeaver Database Management Tool. URL: https://dbeaver.io/ (дата звернення: 17.11.2024);
6.	Postman API Testing Tool. URL: https://www.postman.com/ (дата звернення: 17.11.2024).
Посилання на git-репозиторій: https://github.com/NureKalenykVira/arkpz-pzpi-22-6-kalenyk-vira/tree/main/Task1.
Посилання на відео-доповідь:  https://youtu.be/TqSFCEamSzE.
