const jwt = require('jsonwebtoken');
const db = require('../db');

/**
 * Middleware –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞
 */
const authenticateToken = async (req, res, next) => {
    const authHeader = req.headers['authorization'];
    const token = authHeader && authHeader.split(' ')[1];
    console.log('üõ† –û—Ç—Ä–∏–º–∞–Ω–æ –∑–∞–ø–∏—Ç –∑ —Ç–æ–∫–µ–Ω–æ–º:', req.headers['authorization']);

    if (!token) {
        return res.status(401).json({ message: '–ù–µ–æ–±—Ö—ñ–¥–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è.' });
    }

    try {
        console.log('>>> –û—Ç—Ä–∏–º–∞–Ω–∏–π –∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Ç–æ–∫–µ–Ω:', token);

const decoded = jwt.verify(token, process.env.JWT_SECRET);
console.log('>>> –†–æ–∑–∫–æ–¥–æ–≤–∫–∞ JWT:', decoded);

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤ –ë–î (–∑–∞–ª–∏—à–∞—î—Ç—å—Å—è –±–µ–∑ –∑–º—ñ–Ω)
const [rows] = await db.query('SELECT * FROM UserTokens WHERE Token = ? AND Expiration > NOW()', [token]);
if (rows.length === 0) {
  console.log('‚ùå –¢–æ–∫–µ–Ω –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–±–æ –ø—Ä–æ—Ç–µ—Ä–º—ñ–Ω–æ–≤–∞–Ω–∏–π —É –ë–î:', token);
  return res.status(403).json({ message: '–¢–æ–∫–µ–Ω –Ω–µ–¥—ñ–π—Å–Ω–∏–π –∞–±–æ —Ç–µ—Ä–º—ñ–Ω –¥—ñ—ó –∑–∞–≤–µ—Ä—à–µ–Ω–æ.' });
}

// üõ†Ô∏è –û—Å—å —Ü—è —á–∞—Å—Ç–∏–Ω–∞ ‚Äî –≥–æ–ª–æ–≤–Ω–µ:
req.user = {
  userId: decoded.userId,
  role: decoded.role
};

console.log('–†–æ–ª—å, –æ—Ç—Ä–∏–º–∞–Ω–∞ –∑ —Ç–æ–∫–µ–Ω–∞:', decoded.role);
next();
    } catch (error) {

        console.error('–ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó:', error);
        res.status(403).json({ message: '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –∞–±–æ –ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω–∏–π —Ç–æ–∫–µ–Ω.' });
    }
};

module.exports = authenticateToken;